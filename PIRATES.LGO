TO PIRATE.GAME
SETBG 0 CT
PR []
PR []
PR [Please think of any pirate, past or]
PR [present! Press < RETURN > when ready!]
PR RL
MAKE "NEW.PIRATES GUESS.PERSON.WITH.QS :PIRATES
IF EQUALP :NEW.PIRATES :PIRATES [END.TEXT.CORRECT] [MAKE "PIRATES :NEW.PIRATES END.TEXT.LEARNED]
ERN [PERSON2 NEW.PIRATES]
END

TO GUESS.PERSON.WITH.QS :LIST
IF EQUALP 1 COUNT :LIST [OP ASK.FINAL.GUESS :LIST]
IF EQUALP IS.PIRATE :LIST "TRUE [OP SET.PIRATE 2 :LIST GUESS.PERSON.WITH.QS ITEM 2 :LIST]
OP SET.PIRATE 3 :LIST GUESS.PERSON.WITH.QS ITEM 3 :LIST
END

TO GET.NEW.PERSON.DIFF :PERSON1
MAKE "PERSON2 GET.NEW.PERSON
PR [What's the difference?]
OP FPUT QUESTION :PERSON1 :PERSON2 LIST FPUT :PERSON2 [] :PERSON1
END

TO GET.NEW.PERSON
PR [Who is this scalawag you had in mind?]
OP RL
END

TO QUESTION :PERSON1 :PERSON2
PR [Tell me something that the pirate]
PR SE :PERSON2 [is, that]
PR SE FIRST :PERSON1 [is not.]
OP RL
END

TO ITEM :INDEX :LIST
IF EMPTYP :LIST [OP []]
IF EQUALP :INDEX 1 [OP FIRST :LIST]
OP ITEM :INDEX - 1 BF :LIST
END

TO SET.PIRATE :INDEX :LIST :VALUE
IF EQUALP :INDEX 2 [OP FPUT FIRST :LIST LIST :VALUE FIRST BF BF :LIST]
OP FPUT FIRST :LIST LIST FIRST BF :LIST :VALUE
END

TO IS.PIRATE :LIST
PR ( SE [Is this scurvy dog] FIRST :LIST [?]
PR [Y / N]
MAKE "ANS RL
IF MEMBERP FIRST :ANS [Y YES TRUE y yes true] [ERN "ANS OP "TRUE]
ERN "ANS OP "FALSE
END

TO ASK.FINAL.GUESS :LIST
IF IS.PIRATE :LIST [OP :LIST]
PR [I don't know that pirate! Please help]
PR [me learn about this devil of the deep]
OP GET.NEW.PERSON.DIFF :LIST
END

TO END.TEXT.LEARNED
WAIT 120
CT
PR [Thank you for teaching me about a new]
PR [hooligan of the high seas!]
PR []
PR [Thank you for playing!]
END

TO END.TEXT.CORRECT
CT
PR [I guess I know every pirate there is!]
PR []
PR [Thank you for playing!]
END

MAKE "PIRATES [[John Lennon]]