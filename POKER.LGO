TO POKER
CT PR [Dave's Poker!]
PR []
MAKE "FIRST.HAND FILL.HAND [] DEAL.CARD
( PR [The first hand is] :FIRST.HAND )
( PR [You got] POKERHAND :FIRST.HAND )
PR []
MAKE "SECOND.HAND FILL.2ND.HAND :FIRST.HAND [] DEAL.CARD
( PR [The second hand is] :SECOND.HAND )
( PR [They got] POKERHAND :SECOND.HAND )
PR []
PR COMPARE.HANDS :FIRST.HAND :SECOND.HAND
CLEANUP
END

TO CLEANUP
ERN [FIRST.HAND SECOND.HAND RANKS SUITS RANKARRAY H1 H2]
END

TO WINNING.HANDP :FIRST.HAND :SECOND.HAND
MAKE "H1 FIND.INDEX POKERHAND :FIRST.HAND :HAND.RANKS
MAKE "H2 FIND.INDEX POKERHAND :SECOND.HAND :HAND.RANKS
IF :H1 < :H2 [OP "TRUE]
IF :H1 > :H2 [OP "FALSE]
OP "EQUAL
END

TO COMPARE.HANDS :FIRST.HAND :SECOND.HAND
IF EQUALP WINNING.HANDP :FIRST.HAND :SECOND.HAND "EQUAL [OP [The rank of your hands are equal!]]
IF WINNING.HANDP :FIRST.HAND :SECOND.HAND [OP [You win! Your hand rank is higher]]
OP [Sorry! You Lose! Your hand rank is lower!]
END

TO FIND.INDEX :ITEM :LIST
OP FIND.INDEX.ITEM :ITEM 0 :LIST
END

TO FIND.INDEX.ITEM :ITEM :INDEX :LIST
IF EQUALP :ITEM FIRST :LIST [OP SUM :INDEX 1]
OP FIND.INDEX.ITEM :ITEM SUM :INDEX 1 BF :LIST
END

TO RANKNUM :RANK
IF :RANK = "A [OP 1]
IF :RANK = "J [OP 11]
IF :RANK = "Q [OP 12]
IF :RANK = "K [OP 13]
OP :RANK
END

TO FILL.RANKARRAY :RANKS
IF EMPTYP :RANKS [STOP]
MAKE "RANKARRAY SETITEM FIRST :RANKS :RANKARRAY SUM ITEM FIRST :RANKS :RANKARRAY 1
FILL.RANKARRAY BF :RANKS
END

TO REMDUP :LIST
IF EMPTYP :LIST [OP []]
OP REMDUP1 FIRST :LIST BF :LIST
END

TO REMDUP1 :ITEM :LIST
IF NOT MEMBERP :ITEM :LIST [OP SE :ITEM REMDUP :LIST] [OP REMDUP :LIST]
END

TO FILL.HAND :HAND :CARD
IF EQUALP COUNT :HAND 5 [OP :HAND]
IF MEMBERP :CARD :HAND [OP FILL.HAND :HAND DEAL.CARD] [OP FILL.HAND LPUT :CARD :HAND DEAL.CARD]
END

TO DEAL.CARD
OP ( WORD ITEM SUM RANDOM 13 1 :PERM.RANKS ITEM SUM RANDOM 4 1 :PERM.SUITS )
END

TO FILL.2ND.HAND :FIRST.HAND :HAND :CARD
IF EQUALP COUNT :HAND 5 [OP :HAND]
IF OR MEMBERP :CARD :FIRST.HAND MEMBERP :CARD :HAND [OP FILL.2ND.HAND :FIRST.HAND :HAND DEAL.CARD]
OP FILL.2ND.HAND :FIRST.HAND LPUT :CARD :HAND DEAL.CARD
END

TO POKER.INIT :CARDS
MAKE "RANKS MAP [RANKNUM BL] :CARDS
MAKE "SUITS REMDUP MAP "LAST :CARDS
MAKE "RANKARRAY [0 0 0 0 0 0 0 0 0 0 0 0 0]
FILL.RANKARRAY :RANKS
END

TO POKERHAND :CARDS
POKER.INIT :CARDS
IF FOURP [OP [four of a kind]]
IF FULL.HOUSEP [OP [full house]]
IF THREEP [OP [three of a kind]]
IF PAIRP [OP IF EQUALP PAIRCOUNT 1 [[one pair]] [[two pairs]]]
IF ACE.HIGHP [OP IF FLUSHP [[royal flush]] [[straight]]]
IF STRAIGHTP [OP IF FLUSHP [[straight flush]] [[straight]]]
IF FLUSHP [OP [flush]]
OP [nothing!]
END

TO FOURP
OP MEMBERP 4 :RANKARRAY
END

TO FULL.HOUSEP
OP AND THREEP PAIRP
END

TO THREEP
OP MEMBERP 3 :RANKARRAY
END

TO PAIRP
OP MEMBERP 2 :RANKARRAY
END

TO PAIRCOUNT
OP COUNT LOCATE 2 1
END

TO ACE.HIGHP
IF NOT EQUALP ITEM 1 :RANKARRAY 1 [OP "FALSE]
OP NOGAP 10 4
END

TO FLUSHP
OP EMPTYP BF :SUITS
END

TO MIN :A :B
OP IF :A < :B [:A] [:B]
END

TO STRAIGHTP
OP NOGAP REDUCE "MIN :RANKS 5
END

TO NOGAP :SMALLEST :HOWMANY
IF EQUALP :HOWMANY 0 [OP "TRUE]
IF NOT EQUALP ITEM :SMALLEST :RANKARRAY 1 [OP "FALSE]
OP NOGAP SUM :SMALLEST 1 DIFF :HOWMANY 1
END

TO LOCATE :NUMBER :INDEX
IF :INDEX > 13 [OP []]
IF EQUALP ITEM :INDEX :RANKARRAY :NUMBER [OP FPUT :INDEX LOCATE :NUMBER SUM :INDEX 1]
OP LOCATE :NUMBER SUM :INDEX 1
END


MAKE "HAND.RANKS [[royal flush] [straight flush] [four of a kind] [full house] [flush] [straight] [three of a kind] [two pairs] [one pair] [nothing!]]
MAKE "PERM.SUITS [H D C S]
MAKE "PERM.RANKS [A 2 3 4 5 6 7 8 9 10 J Q K]

